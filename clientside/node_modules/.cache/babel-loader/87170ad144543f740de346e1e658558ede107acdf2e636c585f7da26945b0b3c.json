{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const BoardsDropdown=_ref=>{let{options,value,onChange}=_ref;return/*#__PURE__*/_jsx(\"select\",{value:value,onChange:e=>onChange(e.target.value),style:{padding:\"8px\",fontSize:\"16px\",color:\"black\",backgroundColor:\"white\",boxShadow:\"4px 4px 10px black\",border:\"2px solid black\",borderRadius:\"0px\"},children:options.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.id,children:option.name},option.id))});};export default BoardsDropdown;// import React from \"react\";\n// import { useState } from \"react\";\n// import Modal from \"./Modal\";\n// const BoardsDropdown = ({ options, value, onChange, accessIsGiven }) => { \n//   // options = [];\n//   const [showConfirmation, setShowConfirmation] = useState(false);\n//   const handleClick =()=>{\n//     if(options.length === 0){\n//       setShowConfirmation(true);\n//     }\n//     else{\n//       setShowConfirmation(false);\n//     }\n//   };\n//   const handleConfirmationCancel = () => {\n//     setShowConfirmation(false);\n//   };\n//   return (\n//     <>\n//     <select\n//       value={value}\n//       onChange={(e) => onChange(e.target.value)}\n//       onClick={()=>handleClick()}\n//       style={{\n//         padding: \"8px\",\n//         fontSize: \"16px\",\n//         color: \"black\",\n//         backgroundColor: \"white\",\n//         boxShadow: \"4px 4px 10px black\",\n//         border: \"2px solid black\",\n//         borderRadius: \"0px\"\n//       }}\n//     >\n//       {options.map((option) => (\n//         <option key={option.id} value={option.id}>\n//           {option.name}\n//         </option>\n//       ))}\n//     </select>\n//     {\n//       !accessIsGiven ? options.length === 0 && showConfirmation && <Modal onCancel={handleConfirmationCancel} message={\"Data is empty\"}/>\n//       :  showConfirmation && <Modal onCancel={handleConfirmationCancel} message={\"You have not Data Access\"}/>\n//     }\n//     </>\n//   );\n// };\n// export default BoardsDropdown;","map":{"version":3,"names":["React","jsx","_jsx","BoardsDropdown","_ref","options","value","onChange","e","target","style","padding","fontSize","color","backgroundColor","boxShadow","border","borderRadius","children","map","option","id","name"],"sources":["C:/Users/I T S/Desktop/sync-data-from-active_campaigns-to-monday/src/components/BoardsDropdown.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst BoardsDropdown = ({ options, value, onChange }) => {\r\n  return (\r\n    <select\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      style={{\r\n        padding: \"8px\",\r\n        fontSize: \"16px\",\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n        boxShadow: \"4px 4px 10px black\",\r\n        border: \"2px solid black\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      {options.map((option) => (\r\n        <option key={option.id} value={option.id}>\r\n          {option.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default BoardsDropdown;\r\n\r\n// import React from \"react\";\r\n// import { useState } from \"react\";\r\n// import Modal from \"./Modal\";\r\n\r\n// const BoardsDropdown = ({ options, value, onChange, accessIsGiven }) => { \r\n//   // options = [];\r\n  \r\n//   const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n//   const handleClick =()=>{\r\n//     if(options.length === 0){\r\n//       setShowConfirmation(true);\r\n//     }\r\n//     else{\r\n//       setShowConfirmation(false);\r\n//     }\r\n//   };\r\n//   const handleConfirmationCancel = () => {\r\n//     setShowConfirmation(false);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//     <select\r\n//       value={value}\r\n//       onChange={(e) => onChange(e.target.value)}\r\n//       onClick={()=>handleClick()}\r\n//       style={{\r\n//         padding: \"8px\",\r\n//         fontSize: \"16px\",\r\n//         color: \"black\",\r\n//         backgroundColor: \"white\",\r\n//         boxShadow: \"4px 4px 10px black\",\r\n//         border: \"2px solid black\",\r\n//         borderRadius: \"0px\"\r\n//       }}\r\n//     >\r\n//       {options.map((option) => (\r\n//         <option key={option.id} value={option.id}>\r\n//           {option.name}\r\n//         </option>\r\n//       ))}\r\n//     </select>\r\n//     {\r\n//       !accessIsGiven ? options.length === 0 && showConfirmation && <Modal onCancel={handleConfirmationCancel} message={\"Data is empty\"}/>\r\n//       :  showConfirmation && <Modal onCancel={handleConfirmationCancel} message={\"You have not Data Access\"}/>\r\n        \r\n//     }\r\n        \r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default BoardsDropdown;\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkC,IAAjC,CAAEC,OAAO,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAClD,mBACEF,IAAA,WACEI,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAGC,CAAC,EAAKD,QAAQ,CAACC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,KAAK,CAAE,CACLC,OAAO,CAAE,KAAK,CACdC,QAAQ,CAAE,MAAM,CAChBC,KAAK,CAAE,OAAO,CACdC,eAAe,CAAE,OAAO,CACxBC,SAAS,CAAE,oBAAoB,CAC/BC,MAAM,CAAE,iBAAiB,CACzBC,YAAY,CAAE,KAChB,CAAE,CAAAC,QAAA,CAEDb,OAAO,CAACc,GAAG,CAAEC,MAAM,eAClBlB,IAAA,WAAwBI,KAAK,CAAEc,MAAM,CAACC,EAAG,CAAAH,QAAA,CACtCE,MAAM,CAACE,IAAI,EADDF,MAAM,CAACC,EAEZ,CACT,CAAC,CACI,CAAC,CAEb,CAAC,CAED,cAAe,CAAAlB,cAAc,CAE7B;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}