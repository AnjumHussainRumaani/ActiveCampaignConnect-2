{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\I T S\\\\Desktop\\\\sync-data-from-active_campaigns-to-monday\\\\src\\\\components\\\\BoardsDropdown.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardsDropdown = ({\n  options,\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: value,\n    onChange: e => onChange(e.target.value),\n    style: {\n      padding: \"8px\",\n      fontSize: \"16px\",\n      color: \"black\",\n      backgroundColor: \"white\",\n      boxShadow: \"4px 4px 10px black\",\n      border: \"2px solid black\",\n      borderRadius: \"0px\"\n    },\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.id,\n      children: option.name\n    }, option.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = BoardsDropdown;\nexport default BoardsDropdown;\n\n// import React from \"react\";\n// import { useState } from \"react\";\n// import Modal from \"./Modal\";\n\n// const BoardsDropdown = ({ options, value, onChange, accessIsGiven }) => { \n//   // options = [];\n\n//   const [showConfirmation, setShowConfirmation] = useState(false);\n\n//   const handleClick =()=>{\n//     if(options.length === 0){\n//       setShowConfirmation(true);\n//     }\n//     else{\n//       setShowConfirmation(false);\n//     }\n//   };\n//   const handleConfirmationCancel = () => {\n//     setShowConfirmation(false);\n//   };\n\n//   return (\n//     <>\n//     <select\n//       value={value}\n//       onChange={(e) => onChange(e.target.value)}\n//       onClick={()=>handleClick()}\n//       style={{\n//         padding: \"8px\",\n//         fontSize: \"16px\",\n//         color: \"black\",\n//         backgroundColor: \"white\",\n//         boxShadow: \"4px 4px 10px black\",\n//         border: \"2px solid black\",\n//         borderRadius: \"0px\"\n//       }}\n//     >\n//       {options.map((option) => (\n//         <option key={option.id} value={option.id}>\n//           {option.name}\n//         </option>\n//       ))}\n//     </select>\n//     {\n//       !accessIsGiven ? options.length === 0 && showConfirmation && <Modal onCancel={handleConfirmationCancel} message={\"Data is empty\"}/>\n//       :  showConfirmation && <Modal onCancel={handleConfirmationCancel} message={\"You have not Data Access\"}/>\n\n//     }\n\n//     </>\n//   );\n// };\n\n// export default BoardsDropdown;\nvar _c;\n$RefreshReg$(_c, \"BoardsDropdown\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BoardsDropdown","options","value","onChange","e","target","style","padding","fontSize","color","backgroundColor","boxShadow","border","borderRadius","children","map","option","id","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/I T S/Desktop/sync-data-from-active_campaigns-to-monday/src/components/BoardsDropdown.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst BoardsDropdown = ({ options, value, onChange }) => {\r\n  return (\r\n    <select\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      style={{\r\n        padding: \"8px\",\r\n        fontSize: \"16px\",\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n        boxShadow: \"4px 4px 10px black\",\r\n        border: \"2px solid black\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      {options.map((option) => (\r\n        <option key={option.id} value={option.id}>\r\n          {option.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default BoardsDropdown;\r\n\r\n// import React from \"react\";\r\n// import { useState } from \"react\";\r\n// import Modal from \"./Modal\";\r\n\r\n// const BoardsDropdown = ({ options, value, onChange, accessIsGiven }) => { \r\n//   // options = [];\r\n  \r\n//   const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n//   const handleClick =()=>{\r\n//     if(options.length === 0){\r\n//       setShowConfirmation(true);\r\n//     }\r\n//     else{\r\n//       setShowConfirmation(false);\r\n//     }\r\n//   };\r\n//   const handleConfirmationCancel = () => {\r\n//     setShowConfirmation(false);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//     <select\r\n//       value={value}\r\n//       onChange={(e) => onChange(e.target.value)}\r\n//       onClick={()=>handleClick()}\r\n//       style={{\r\n//         padding: \"8px\",\r\n//         fontSize: \"16px\",\r\n//         color: \"black\",\r\n//         backgroundColor: \"white\",\r\n//         boxShadow: \"4px 4px 10px black\",\r\n//         border: \"2px solid black\",\r\n//         borderRadius: \"0px\"\r\n//       }}\r\n//     >\r\n//       {options.map((option) => (\r\n//         <option key={option.id} value={option.id}>\r\n//           {option.name}\r\n//         </option>\r\n//       ))}\r\n//     </select>\r\n//     {\r\n//       !accessIsGiven ? options.length === 0 && showConfirmation && <Modal onCancel={handleConfirmationCancel} message={\"Data is empty\"}/>\r\n//       :  showConfirmation && <Modal onCancel={handleConfirmationCancel} message={\"You have not Data Access\"}/>\r\n        \r\n//     }\r\n        \r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default BoardsDropdown;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACvD,oBACEJ,OAAA;IACEG,KAAK,EAAEA,KAAM;IACbC,QAAQ,EAAGC,CAAC,IAAKD,QAAQ,CAACC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC1CI,KAAK,EAAE;MACLC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE,MAAM;MAChBC,KAAK,EAAE,OAAO;MACdC,eAAe,EAAE,OAAO;MACxBC,SAAS,EAAE,oBAAoB;MAC/BC,MAAM,EAAE,iBAAiB;MACzBC,YAAY,EAAE;IAChB,CAAE;IAAAC,QAAA,EAEDb,OAAO,CAACc,GAAG,CAAEC,MAAM,iBAClBjB,OAAA;MAAwBG,KAAK,EAAEc,MAAM,CAACC,EAAG;MAAAH,QAAA,EACtCE,MAAM,CAACE;IAAI,GADDF,MAAM,CAACC,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACC,EAAA,GAtBIvB,cAAc;AAwBpB,eAAeA,cAAc;;AAE7B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}